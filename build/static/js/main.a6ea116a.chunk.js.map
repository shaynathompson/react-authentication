{"version":3,"sources":["logo.svg","components/HomeComponent.js","components/LoginComponent.js","components/RegisterComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeEmail","bind","assertThisInitialized","onChangeToken","onSubmit","state","email","token","e","setState","target","value","preventDefault","user","axios","post","then","res","console","log","data","react_default","a","createElement","style","marginTop","className","type","onChange","Component","LoginComponent","onChangePassword","password","RegisterComponent","App","BrowserRouter","Link","to","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6ea116a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class HomeComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeToken = this.onChangeToken.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            token: ''\r\n        }\r\n    }\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n    onChangeToken(e) {\r\n        this.setState({\r\n            token: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            token: this.state.token\r\n        }\r\n        axios.post('http://localhost:4200/user/verifyEmail', user)\r\n        .then(res => console.log(res.data));\r\n        this.setState({\r\n            email: '',\r\n            token: ''\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div style={{marginTop: 50}}>\r\n                <h3>Verify Email</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email:  </label>\r\n                        <input type=\"text\" value={this.state.email} className=\"form-control\" onChange={this.onChangeEmail}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Token: </label>\r\n                        <input type=\"password\" value={this.state.token} className=\"form-control\" onChange={this.onChangeToken}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"verify\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post('http://localhost:4200/user/login', user)\r\n        .then(res => console.log(res.data));\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div style={{marginTop: 50}}>\r\n                <h3>Login</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email:  </label>\r\n                        <input type=\"text\" value={this.state.email} className=\"form-control\" onChange={this.onChangeEmail}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input type=\"password\" value={this.state.password} className=\"form-control\" onChange={this.onChangePassword}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"login\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class RegisterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post('http://localhost:4200/user/register', user)\r\n        .then(res => console.log(res.data));\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n        <div style={{marginTop: 50}}>\r\n                <h3>Register</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email:  </label>\r\n                        <input type=\"text\" value={this.state.email} className=\"form-control\" onChange={this.onChangeEmail}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input type=\"password\" value={this.state.password} className=\"form-control\" onChange={this.onChangePassword}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"register\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nimport HomeComponent from './components/HomeComponent';\nimport LoginComponent from './components/LoginComponent';\nimport RegisterComponent from './components/RegisterComponent';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n          <div>\n            <h2>Welcome to Node-React Authentication</h2>\n            <ul>\n            <li><Link to={'/'}>Home</Link></li>\n              <li><Link to={'/login'}>Login</Link></li>\n              <li><Link to={'/register'}>Register</Link></li>\n            </ul>\n            <hr />\n            <Switch>\n                <Route exact path='/index' component={HomeComponent} />\n                <Route path='/login' component={LoginComponent} />\n                <Route path='/register' component={RegisterComponent} />\n            </Switch>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}